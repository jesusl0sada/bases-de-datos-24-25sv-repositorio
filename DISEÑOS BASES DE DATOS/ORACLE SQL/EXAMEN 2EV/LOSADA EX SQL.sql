PARTE A: 

CREACIÓN TABLAS + INSERTS:

BASE DE DATOS TALLER MECÁNICO

TABLAS NECESARIAS:
CLIENTE (HECHA)
COCHE (CONTENDRÁ LA FK ID_CLIENTE -> PRIMARY KEY EN TABLA CLIENTE) (HECHA)
MECANICO (HECHA)
COCHE_MECANICO / REPARACION (TABLA INTERMEDIA DE LA RELACIÓN N-M -> CONTENDRÁ LAS FKS ID_COCHE , ID_MECANICO) 
-> UN MECANICO PUEDE REPARAR UN COCHE VARIAS VECES: ADEMÁS TENDRÁ UNA FECHA_REPARACION (PUEDE SER NULL SI 
NO SE HA REPARADO EL COCHE) (HECHA)


CREACIÓN TABLAS:

TABLA CLIENTE: 

CREATE TABLE CLIENTE(
DNI_CLIENTE VARCHAR2(9),
NOMBRE_CLIENTE VARCHAR2(25),
APELLIDOS_CLIENTE VARCHAR2(50),
DIRECCION_CLIENTE VARCHAR2(40),
TELEFONO_CLIENTE NUMBER(9),
CONSTRAINT PK_DNI_CLIENTE PRIMARY KEY (DNI_CLIENTE),
CONSTRAINT NN_NOMBRE_CLIENTE CHECK (NOMBRE_CLIENTE IS NOT NULL),
CONSTRAINT NN_APELLIDOS_CLIENTE CHECK (APELLIDOS_CLIENTE IS NOT NULL),
CONSTRAINT NN_DIRECCION_CLIENTE CHECK (DIRECCION_CLIENTE IS NOT NULL),
CONSTRAINT CK_TELEFONO_CLIENTE CHECK (TELEFONO_CLIENTE > 0),
CONSTRAINT NN_TELEFONO_CLIENTE CHECK (TELEFONO_CLIENTE IS NOT NULL)
);


TABLA COCHE:

CREATE TABLE COCHE(
MATRICULA_COCHE VARCHAR2(7),
DNI_CLIENTE VARCHAR2(9),
MODELO_COCHE VARCHAR2(30),
MARCA_COCHE VARCHAR2(25),
COLOR_COCHE VARCHAR2(20),
KMS_COCHE NUMBER(8),
CONSTRAINT PK_MATRICULA_COCHE PRIMARY KEY (MATRICULA_COCHE),
CONSTRAINT FK_DNI_CLIENTE FOREIGN KEY (DNI_CLIENTE) REFERENCES CLIENTE (DNI_CLIENTE),
CONSTRAINT NN_MODELO_COCHE CHECK (MODELO_COCHE IS NOT NULL),
CONSTRAINT NN_MARCA_COCHE CHECK (MARCA_COCHE IS NOT NULL),
CONSTRAINT NN_COLOR_COCHE CHECK (COLOR_COCHE IS NOT NULL),
CONSTRAINT NN_KMS_COCHE CHECK (KMS_COCHE IS NOT NULL),
CONSTRAINT CK_KMS_COCHE CHECK (KMS_COCHE >= 0)
);


TABLA MECANICO:

CREATE TABLE MECANICO(
DNI_MECANICO VARCHAR2(9),
NOMBRE_MECANICO VARCHAR2(25),
APELLIDOS_MECANICO VARCHAR2(50),
SALARIO_MECANICO NUMBER(5),
FECHA_CONTRATACION_MECANICO DATE,
CONSTRAINT PK_DNI_MECANICO PRIMARY KEY (DNI_MECANICO),
CONSTRAINT NN_NOMBRE_MECANICO CHECK (NOMBRE_MECANICO IS NOT NULL),
CONSTRAINT NN_APELLIDOS_MECANICO CHECK (APELLIDOS_MECANICO IS NOT NULL),
CONSTRAINT NN_SALARIO_MECANICO CHECK (SALARIO_MECANICO IS NOT NULL),
CONSTRAINT CK_SALARIO_MECANICO CHECK (SALARIO_MECANICO > 1000),
CONSTRAINT NN_FECHA_CONTRATACION_MECANICO CHECK (FECHA_CONTRATACION_MECANICO IS NOT NULL)
);


TABLA COCHE_MECANICO / REPARACION -> NACIDA DE LA RELACION N/M

CREATE TABLE COCHE_MECANICO(
MATRICULA_COCHE VARCHAR2(7),
DNI_MECANICO VARCHAR2(9),
FECHA_REPARACION DATE,
CONSTRAINT FK_MATRICULA_COCHE FOREIGN KEY (MATRICULA_COCHE) REFERENCES COCHE (MATRICULA_COCHE),
CONSTRAINT FK_DNI_MECANICO FOREIGN KEY (DNI_MECANICO) REFERENCES MECANICO (DNI_MECANICO)
);

-> AQUÍ NO AÑADIRÍAMOS UNA DOBLE PK CON MATRICULA_COCHE Y DNI_MECANICO YA QUE EL MISMO COCHE LO PUEDE REPARAR MÁS VECES EL MISMO MECANICO, 
DEJAMOS LA FECHA_REPARACION CON POSIBILIDAD DE DEJARLA EN NULL, SI ESTÁ NULL QUERRÁ DECIR QUE LA REPARACIÓN NO HA FINALIZADO; POR ENDE, EL COCHE
SEGUIRÁ REPARÁNDOSE -> CLAVE PARA LA CONSULTA NÚMERO 3.


INSERTS 

TABLA CLIENTE:

INSERT INTO CLIENTE VALUES('65432345H', 'Jesus', 'Losada Carreras', 'Calle mazapan 22', 976543212);
INSERT INTO CLIENTE VALUES('37328732Q', 'Daniel', 'Lazar Vadorrey', 'Plaza asuncion 34', 976652345);
INSERT INTO CLIENTE VALUES('73328732L', 'Mario', 'Cortes Cantin', 'Plaza España 4', 665236453);


TABLA COCHE:

INSERT INTO COCHE VALUES('3566HJK', '65432345H', 'Opel Astra', 'Opel', 'Rojo', 155000);
INSERT INTO COCHE VALUES('6653AIK', '37328732Q', 'Opel Ciclon', 'Opel', 'Azul', 145000);
INSERT INTO COCHE VALUES('3489LMZ', '73328732L', 'Audi R6', 'Audi', 'Negro', 79000);


TABLA MECANICO:

INSERT INTO MECANICO VALUES('98342156N', 'Daniel', 'Jesus Ibaniez', '1800', TO_DATE('2007-05-25', 'YYYY-MM-DD'));
INSERT INTO MECANICO VALUES('89432516J', 'Arturo', 'Marco Lopez', '1500', TO_DATE('2019-06-18', 'YYYY-MM-DD'));
INSERT INTO MECANICO VALUES('69132565P', 'Inigo', 'Andres Laya', '2000', TO_DATE('2005-02-02', 'YYYY-MM-DD'));
INSERT INTO MECANICO VALUES('88832565Q', 'Daniel', 'Lalanza', '1200', TO_DATE('2025-02-18', 'YYYY-MM-DD'));


TABLA COCHE_MECANICO -> REPARACION (N/M)

INSERT INTO COCHE_MECANICO VALUES('3566HJK', '98342156N', NULL);
INSERT INTO COCHE_MECANICO VALUES('6653AIK', '89432516J', TO_DATE('2025-03-07', 'YYYY-MM-DD'));
INSERT INTO COCHE_MECANICO VALUES('3489LMZ', '69132565P', TO_DATE('2024-08-21', 'YYYY-MM-DD'));
INSERT INTO COCHE_MECANICO VALUES('6653AIK', '89432516J', NULL);
INSERT INTO COCHE_MECANICO VALUES('3489LMZ', '88832565Q', TO_DATE('2025-03-08', 'YYYY-MM-DD'));


PARTE B: 

CONSULTAS SQL: 

1. Coches que tenemos de la marca “Opel” con más de 150.000 kms
2. Localización de TODOS los clientes que hayan comprado algún
coche de la marca “Opel” con más de 150.000 kms
3.  Matrícula de coches que todavía NO hayan sido reparados
4. Nombre, apellido y teléfono de los clientes que tengan algún coche
que haya sido reparado en los últimos 30 días.
5. Número total de clientes que tengan algún coche que haya sido
reparado por un mecánico contratado el último año.

1. Coches que tenemos de la marca “Opel” con más de 150.000 kms

-> USAREMOS ÚNICAMENTE DATOS DE LA TABLA COCHE PARA LA CONSULTA, NO NECESITAMOS ENLAZAR MÁS.

SELECT MATRICULA_COCHE, MODELO_COCHE, KMS_COCHE
FROM COCHE
WHERE KMS_COCHE > 150000
AND UPPER(MARCA_COCHE) = 'OPEL';

MATRICU MODELO_COCHE                    KMS_COCHE
------- ------------------------------ ----------
3566HJK Opel Astra                         155000


2. Localización de TODOS los clientes que hayan comprado algún coche de la marca “Opel” con más de 150.000 kms

-> AHORA SÍ QUE NECESITAREMOS ENLAZAR DOS TABLAS , LA DE CLIENTES Y LA DE COCHE , PARA ELLO PODEMOS USAR O BIEN
UNA CONDICIÓN DE ENLACE CON WHERE O UN JOIN (YO VOY A USAR UNA CONDICIÓN DE ENLACE)

SELECT COCHE.MATRICULA_COCHE, COCHE.MODELO_COCHE, COCHE.MARCA_COCHE, CLIENTE.NOMBRE_CLIENTE, CLIENTE.APELLIDOS_CLIENTE, CLIENTE.DIRECCION_CLIENTE
FROM COCHE, CLIENTE
WHERE COCHE.DNI_CLIENTE = CLIENTE.DNI_CLIENTE
AND COCHE.KMS_COCHE > 150000
AND UPPER(COCHE.MARCA_COCHE) = 'OPEL';

MATRICU MODELO_COCHE                   MARCA_COCHE
------- ------------------------------ -------------------------
NOMBRE_CLIENTE            APELLIDOS_CLIENTE
------------------------- --------------------------------------------------
DIRECCION_CLIENTE
----------------------------------------
3566HJK Opel Astra                     Opel
Jesus                     Losada Carreras


3. Matrícula de coches que todavía NO hayan sido reparados

-> NECESITAREMOS ENLAZAR DOS TABLAS, LA DE COCHE_MECANICO / REPARACIÓN CON LA DE COCHE,
LA DE COCHE_MECANICO ES N-M CON LO CUAL ENLAZAREMOS LA FK MATRICULA_COCHE DE ESTA CON LA PK MATRICULA_COCHE DE LA TABLA COCHE
Y QUE NO HAYAN SIDO REPARADOS -> QUE LA FECHA_REPARACION SEA NULL.

SELECT COCHE.MATRICULA_COCHE
FROM COCHE, COCHE_MECANICO
WHERE COCHE.MATRICULA_COCHE = COCHE_MECANICO.MATRICULA_COCHE 
AND COCHE_MECANICO.FECHA_REPARACION IS NULL;

MATRICU
-------
3566HJK
6653AIK  -> EN CASO DE ESTE YA HA SIDO REPARADO UNA VEZ Y AHORA ESTÁ EN REPARACIÓN PUES NO TIENE FECHA_REPARACION.

-> CON EL IS NULL AL NO HABER PUESTO UNA CONSTRAINT NOS ASEGURAMOS DE QUE ESTÁ VACÍO EL CAMPO Y SABEMOS QUE SI NO HAY UNA FECHA
ASOCIADA QUIERE DECIR QUE LA REPARACIÓN AÚN NO HA SIDO REALIZADA Y QUE ESTÁN EN ELLO.


4. Nombre, apellido y teléfono de los clientes que tengan algún coche
que haya sido reparado en los últimos 30 días.

-> TENDREMOS QUE TRABAJAR CON LAS TABLAS: COCHE_MECANICO, CLIENTE, COCHE (Esta es necesaria 
ya que para saber de quien es el coche debemos enlazarlo así)

SELECT CLIENTE.NOMBRE_CLIENTE, CLIENTE.APELLIDOS_CLIENTE, CLIENTE.TELEFONO_CLIENTE
FROM CLIENTE, COCHE_MECANICO, COCHE
WHERE COCHE.DNI_CLIENTE = CLIENTE.DNI_CLIENTE
AND COCHE.MATRICULA_COCHE = COCHE_MECANICO.MATRICULA_COCHE
AND COCHE_MECANICO.FECHA_REPARACION >= SYSDATE-30;

NOMBRE_CLIENTE            APELLIDOS_CLIENTE
------------------------- --------------------------------------------------
TELEFONO_CLIENTE
----------------
Daniel                    Lazar Vadorrey
       976652345

Mario                     Cortes Cantin
       665236453

5. Número total de clientes que tengan algún coche que haya sido
reparado por un mecánico contratado el último año.

SELECT COUNT (*) AS COCHES_REPARADOS_POR_MEC_NUEVO
FROM COCHE_MECANICO, MECANICO
WHERE COCHE_MECANICO.DNI_MECANICO = MECANICO.DNI_MECANICO
AND MECANICO.FECHA_CONTRATACION_MECANICO >= SYSDATE-365;

COCHES_REPARADOS_POR_MEC_NUEVO  - con esto sacamos las veces que el mecanico nuevo ha reparado.
------------------------------
                             1   -> ES EL ULTIMO INSERT DE MECANICO Y COCHE_MECANICO: EL MECANICO DANIEL LALANZA.

Simplemente debemos unir las tablas COCHE_MECANICO Y MECANICO, no necesitamos unir mas ya que con estas tenemos un
conteo de cuantas veces aparece esa fecha que está comprendida entre hoy y el año pasado. 